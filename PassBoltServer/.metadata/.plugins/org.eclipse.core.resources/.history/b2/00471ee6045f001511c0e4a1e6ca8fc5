package com.passbolt.server;

import java.awt.AWTException;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URISyntaxException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.gargoylesoftware.htmlunit.BrowserVersion;
import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.html.HtmlForm;
import com.gargoylesoftware.htmlunit.html.HtmlPage;
import com.gargoylesoftware.htmlunit.html.HtmlPasswordInput;
import com.gargoylesoftware.htmlunit.html.HtmlSubmitInput;
import com.gargoylesoftware.htmlunit.html.HtmlTextInput;

public class Server {

	BufferedReader in;
	PrintWriter out;
	String url;
	WebDriver driver;

	/**
	 * Start the server on a given port. The server will block until one client
	 * connects. To function nicely, there should only be one client so the
	 * server stops accepting new connections. The server then waits for
	 * commands to be received and handles them.
	 * 
	 * @param port
	 *            The port to listen on
	 * @throws IOException
	 * @throws AWTException
	 * @throws InterruptedException
	 */
	Server(int port) throws IOException, AWTException, InterruptedException {
		System.out.println("Starting Server");
		ServerSocket socket = new ServerSocket(port);
		Socket client = socket.accept(); // accept one client
		System.out.println("Connected");
		in = new BufferedReader(new InputStreamReader(client.getInputStream()));
		out = new PrintWriter(client.getOutputStream(), true);

		listen(); // listen until the client exits. Then exit gracefully as
					// well.
		System.out.println("Closing");
		in.close();
		out.close();
		socket.close();
		client.close();
	}

	/**
	 * The server will listen for new commands and then handle them using the
	 * ServerLib helper methods.
	 * 
	 * @throws IOException
	 * @throws AWTException
	 * @throws InterruptedException
	 */
	public void listen() throws IOException, AWTException, InterruptedException {
		String inputLine;
		String[] args;
		System.out.println("Listening");
		driver = new FirefoxDriver();
		while ((inputLine = in.readLine()) != null) {
			System.out.println(inputLine);
			if (inputLine.equals("exit")) {
				out.write("OK\n");
				break;
			} else if (inputLine.equalsIgnoreCase("fb")) {
				launchGoogle();

			} else if (inputLine.equalsIgnoreCase("gmail")) {
				launchfacebook();
			}

			else {
				out.write("BAD\n"); // something went wrong
			}
			out.flush();
		}

		System.out.println("Exiting");
		return;
	}

	private void launchfacebook() {
		// TODO Auto-generated method stub

	}

	private void launchGoogle() {
		// TODO Auto-generated method stub
        // Go to the Google Suggest home page
		driver.get("http://www.google.com/webhp?complete=1&hl=en");

		// Enter the query string "Cheese"
		WebElement query = driver.findElement(By.name("q"));
		query.sendKeys("Cheese");

		// if (Desktop.isDesktopSupported()) {
		// Desktop desktop = Desktop.getDesktop();
		// try {
		// desktop.browse(new URI(url));
		// } catch (IOException | URISyntaxException e) {
		// // TODO Auto-generated catch block
		// e.printStackTrace();
		// }
		// } else {
		// Runtime runtime = Runtime.getRuntime();
		// try {
		// runtime.exec("xdg-open " + url);
		// } catch (IOException e) {
		// // TODO Auto-generated catch block
		// e.printStackTrace();
		// }
		// }

	}

	private void fillInDetails() throws FailingHttpStatusCodeException,
			MalformedURLException, IOException {
		System.out.println("fillinDetails Added");
		java.util.logging.Logger.getLogger("com.gargoylesoftware").setLevel(
				java.util.logging.Level.OFF);
		// final WebClient webClient = new WebClient(BrowserVersion.CHROME);
		// Go to the Google Suggest home page
		driver.get("http://www.facebook.com");

		// Enter the query string "Cheese"
		WebElement userQuery = driver.findElement(By.name("email"));
		WebElement passQuery = driver.findElement(By.name("pass"));

		userQuery.sendKeys("waterloopassbolt@gmail.com");
		passQuery.sendKeys("waterloo321");
		WebElement login = driver.findElement(By.id("u_0_x"));
		login.click();
	}

	public void launchFacebook() {
		url = "http://www.facebook.com";
		if (Desktop.isDesktopSupported()) {
			Desktop desktop = Desktop.getDesktop();
			// try {
			// System.out.println("hello");
			// //desktop.browse(new URI(url));
			// } catch (IOException | URISyntaxException e) {
			// // TODO Auto-generated catch block
			// e.printStackTrace();
			// }
		} else {
			Runtime runtime = Runtime.getRuntime();
			try {
				runtime.exec("xdg-open " + url);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	/**
	 * Create a new server that listens on port 5555.
	 * 
	 * @param args
	 * @throws AWTException
	 * @throws InterruptedException
	 * @throws IOException
	 */
	public static void main(String[] args) throws AWTException,
			InterruptedException, IOException {
		Server s = new Server(5555);
	}

}
